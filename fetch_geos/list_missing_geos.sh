#!/bin/bash


DATA_PATH=/ships22/cloud/Ancil_Data/clavrx_ancil_data/dynamic/geos
TODAY=$(date +"%Y%m%d")

if [ $# -eq 0 ]; then
	`/bin/pod2usage $0`
	exit
fi

while getopts "w:h" flag; do
	case "$flag" in
		w) DATA_PATH=$OPTARG;;
		h) `/bin/pod2usage $0`
	            exit;;
	esac
done

YEAR=${@:$OPTIND:1}
MONTH=${@:$OPTIND+1:1}

month="${MONTH##*(0)}"

[ -z "${month}" ] && oops || month=`printf "%02d" $((10#$MONTH))`

# call run geos for this full month
ndays=`cal ${MONTH} ${YEAR} | awk 'NF {DAYS = $NF}; END {print DAYS}'`
start_day=${YEAR}${month}01
end_day=${YEAR}${month}${ndays}
if [ "$end_day" -gt "$TODAY" ]; then
	end_day=$TODAY
fi

if [ -z $YEAR ] || [ -z $MONTH ];then
        `/bin/pod2usage $0`
         exit
fi

month=`printf "%02d" $((10#$MONTH))`

str_month=`date -d ${YEAR}-${month}-01 +"%B %Y"`

DATA_PATH=${DATA_PATH}/${YEAR}

ndays=`cal ${MONTH} ${YEAR} | awk 'NF {DAYS = $NF}; END {print DAYS}'`
ntotal=$(( $ndays*4 ))

mkdir -p tmp
tmpfile01=$(mktemp tmp/found_files.XXXXXX.txt)
tmpfile02=$(mktemp tmp/predicted_files.XXXXXX.txt)

ls -1 ${DATA_PATH}/geosfp.${YEAR:2:2}${month}*.hdf > $tmpfile01

while [[ $start_day -le $end_day ]]
do
	echo ${DATA_PATH}/geosfp.${start_day:2}00_F000.hdf >> $tmpfile02
	echo ${DATA_PATH}/geosfp.${start_day:2}06_F000.hdf >> $tmpfile02
	echo ${DATA_PATH}/geosfp.${start_day:2}12_F000.hdf >> $tmpfile02
	echo ${DATA_PATH}/geosfp.${start_day:2}18_F000.hdf >> $tmpfile02
        start_day=$(date -d"$start_day + 1 day" +"%Y%m%d")
done

count=`comm -13 $tmpfile01 $tmpfile02 | wc -l`
if [ $count == 0 ]; then
	echo "No files missing $YEAR/${month}"
else
    comm -13 $tmpfile01 $tmpfile02
    echo "The list generated represents file patterns not found in given path as of $TODAY."
fi
rm $tmpfile01
rm $tmpfile02

: <<=cut
=pod

=head1 NAME


    list_missing_inventory.sh - List missing MERRA2 output files generated by month in data directory

=head1 SYNOPSIS

    sh list_missing_inventory.sh [options] YYYY MM"
   
      where: YYYY is the year (4 digit required)
             MM   is the 1 or 2-digit month

   Recognized optional command line arguments
      -w <string>  -- Use an alternate geos data path
       (default: /ships22/cloud/Ancil_Data/clavrx_ancil_data/dynamic/geos)
      -h  -- Display usage message


=head1 DESCRIPTION

    Uses a pre-compiled expected list to compare against files in the geos data path.  

    Lists the files which do not appear in both files. 

=head2 Requirements

4 digit year is necessary otherwise usage will be shown.

=cut

exit
