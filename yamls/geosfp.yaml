defined levels:
        hPa_levels: [ 1000, 975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, 650, 600, 550, 500, 450, 400, 350, 300, 250, 200, 150, 100, 70, 50, 40, 30, 20, 10, 7, 5, 4, 3, 2, 1, 0.7, 0.5, 0.4, 0.3, 0.1 ] # [hPa]

MSL pressure:
  in_file: asm3d
  shortname: SLP
  ndims_out: 2
  out_units: hPa
  #units_fn: !!python/name:conversions.pa_to_hPa
  nan_fill: False
cloud ice water mixing ratio:
  in_file: asm3d
  shortname: QI
  ndims_out: 3
  out_units: kg/kg  # TODO: this is an issue because pint will make it dimensionless
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
clwmr:
  in_file: asm3d
  shortname: QL
  ndims_out: 3
  out_units: kg/kg  # TODO: this is an issue because pint will make it dimensionless
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
height:
  in_file: asm3d
  shortname: H
  ndims_out: 3
  out_units: km
  #units_fn: !!python/name:conversions.meter_to_km
  nan_fill: False
ice fraction:
  in_file: flx
  shortname: FRSEAICE
  ndims_out: 2
  out_units: 1
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
lat:
  in_file: asm3d
  shortname: lat
  ndims_out: 1
  out_units: degrees_north
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
lon:
  in_file: asm3d
  shortname: lon
  ndims_out: 1
  out_units: degrees_east
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
o3mr:
  in_file: asm3d
  shortname: O3
  ndims_out: 3
  out_units: kg/kg
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: True
planetary boundary layer height:
  in_file: flx
  shortname: PBLH
  ndims_out: 2
  out_units: km
  #units_fn: !!python/name:conversions.meter_to_km
  nan_fill: False
pressure levels:
  in_file: asm3d
  shortname: lev
  ndims_out: 1
  out_units: hPa
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
rh:
  in_file: asm3d
  shortname: QV
  ndims_out: 3
  out_units: percent
  #units_fn: null
  nan_fill: True
  #units_fn: !!python/name:conversions.no_conversion
  dependent:  # dependent variables do not apply conversion.
      masked_temp_k: # this is a support variable which is stored as a masked array to match old code.
        in_file: asm3d
        shortname: T
        ndims_out: 3
        nan_fill: True
        out_units: K
rh at sigma=0.995:
  in_file: slv
  shortname: QV10M
  ndims_out: 2
  out_units: percent
  nan_fill: False
  #units_fn: !!python/name:conversions.fill_bad
  dependent:  # dependents currently do not apply conversions.
    surface_pressure_at_sigma:   # supports rh at sigma calculation
      in_file: slv
      shortname: PS
      ndims_out: 2
      nan_fill: True
      out_units: hPa
    masked_temperature_at_sigma: # this is a support variable which is stored as a masked array to match old code.
      in_file: slv
      shortname: T10M
      ndims_out: 2
      nan_fill: False
      out_units: K
surface pressure:
  in_file: asm3d
  shortname: PS
  ndims_out: 2
  out_units: hPa
  #units_fn: !!python/name:conversions.pa_to_hPa
  nan_fill: False
surface temperature:
  in_file: slv
  shortname: TS
  ndims_out: 2
  out_units: K
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
temperature:
  in_file: asm3d
  shortname: T
  ndims_out: 3
  out_units: K
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
temperature at sigma=0.995:
  in_file: slv
  shortname: T10M
  ndims_out: 2
  out_units: K
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
total cloud fraction:
  in_file: rad
  shortname: CLDTOT
  ndims_out: 2
  out_units: 1
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
total ozone:
  in_file: asm3d
  shortname: O3
  ndims_out: 2
  out_units: 1    # This needs special handling to define dobson after special conversion.
  #units_fn: !!python/name:conversions.kg_per_metersq_to_dobson
  nan_fill: True
total precipitable water:
  in_file: slv
  shortname: TQV
  ndims_out: 2
  out_units: cm
  #units_fn: !!python/name:conversions.meter_to_km
  nan_fill: False
tropopause pressure:
  in_file: slv
  shortname: TROPPT
  ndims_out: 2
  out_units: hPa
  #units_fn: !!python/name:conversions.pa_to_hPa
  nan_fill: False
tropopause temperature:
  in_file: slv
  shortname: TROPT
  ndims_out: 2
  out_units: K
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
u-wind:
  in_file: asm3d
  shortname: U
  ndims_out: 3
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
u-wind at 50M:
  in_file: slv
  shortname: U50M
  ndims_out: 2
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
u-wind at sigma=0.995:
  in_file: slv
  shortname: U10M
  ndims_out: 2
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
v-wind:
  in_file: asm3d
  shortname: V
  ndims_out: 3
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
v-wind at 50M:
  in_file: slv
  shortname: V50M
  ndims_out: 2
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
v-wind at sigma=0.995:
  in_file: slv
  shortname: V10M
  ndims_out: 2
  out_units: m/s
  #units_fn: !!python/name:conversions.no_conversion
  nan_fill: False
water equivalent snow depth:
  in_file: lnd
  shortname: SNOMAS
  ndims_out: 2
  out_units: kg m-2
  nan_fill: False
land mask:
  in_file: mask
  shortname: FRLAND
  ndims_out: 2
  out_units: 1=land, 0=ocean, greenland and antarctica are land
  nan_fill: False
